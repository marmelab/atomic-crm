create table public.locations (
    "id" bigint generated by default as identity not null,
    "company_id" bigint not null,
    "sales_id" bigint,
    "name" text,
    "shipping_address" text,
    "notes" text,
    "active" boolean not null default true
);

alter table public.locations enable row level security;

CREATE UNIQUE INDEX locations_pkey ON public.locations USING btree (id);
alter table public.locations add constraint "locations_pkey" PRIMARY KEY using index "locations_pkey";

ALTER TABLE  public.locations add constraint "locations_uk" UNIQUE (company_id, name);


alter table public.locations add constraint "locations_company_id_fkey" FOREIGN KEY (company_id) REFERENCES companies(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table public.locations validate constraint "locations_company_id_fkey";

grant delete on table public.locations to "authenticated";
grant insert on table public.locations to "authenticated";
grant select on table public.locations to "authenticated";
grant update on table public.locations to "authenticated";

grant delete on table public.locations to "service_role";
grant insert on table public.locations to "service_role";
grant references on table public.locations to "service_role";
grant select on table public.locations to "service_role";
grant trigger on table public.locations to "service_role";
grant truncate on table public.locations to "service_role";
grant update on table public.locations to "service_role";

create policy "Enable insert for authenticated users only"
on public.locations
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for authenticated users"
on public.locations
as permissive
for select
to authenticated
using (true);


create policy "Enable update for authenticated users only"
on public.locations
as permissive
for update
to authenticated
using (true)
with check (true);

create policy "Enable delete on locations"
on public.locations
as permissive
for delete
to authenticated
using (true);

