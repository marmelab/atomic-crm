create table public.commodities (
    "id" bigint generated by default as identity not null,
    "material_id" bigint not null,
    "name" text not null,
    "active" boolean not null default true
);

alter table public.commodities enable row level security;

CREATE UNIQUE INDEX commodities_pkey ON public.commodities USING btree (id);
alter table public.commodities add constraint "commodities_pkey" PRIMARY KEY using index "commodities_pkey";


alter table public.commodities add constraint "commodities_material_id_fkey" FOREIGN KEY (material_id) REFERENCES materials(id) ON UPDATE CASCADE ON DELETE CASCADE not valid;
alter table public.commodities validate constraint "commodities_material_id_fkey";


ALTER TABLE  public.commodities add constraint "commodities_uk" UNIQUE (name);


grant delete on table public.commodities to "authenticated";
grant insert on table public.commodities to "authenticated";
grant select on table public.commodities to "authenticated";
grant update on table public.commodities to "authenticated";

grant delete on table public.commodities to "service_role";
grant insert on table public.commodities to "service_role";
grant references on table public.commodities to "service_role";
grant select on table public.commodities to "service_role";
grant trigger on table public.commodities to "service_role";
grant truncate on table public.commodities to "service_role";
grant update on table public.commodities to "service_role";

create policy "Enable insert for authenticated users only"
on public.commodities
as permissive
for insert
to authenticated
with check (true);


create policy "Enable read access for authenticated users"
on public.commodities
as permissive
for select
to authenticated
using (true);


create policy "Enable update for authenticated users only"
on public.commodities
as permissive
for update
to authenticated
using (true)
with check (true);

create policy "Enable delete for authenticated users only"
on public.commodities
as permissive
for delete
to authenticated
using (true);